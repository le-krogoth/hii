.Dd $Mdocdate: July 31 2018 $
.Dt HII 1
.Os
.Sh NAME
.Nm hii
.Nd a filesystem based IRC client
.Sh SYNOPSIS
.Nm hii
.Op Fl k Pa key
.Op Fl c Pa cert
.Op Fl r Pa certs
.Op Fl f Ar name
.Op Fl i Pa prefix
.Op Fl n Ar nick
.Op Fl p Ar port
.Op Fl t
.Op Fl d
.Ar server
.Op Ar channel ...
.Sh DESCRIPTION
.Nm
is a FIFO and file system based IRC client.
It is heavily inspired by
.Xr ii 1
but offers more features, e.g. built-in TLS support.
.Pp
Just as
.Xr ii 1
.Nm
creates a directory tree for the server containing subdirectories for
every conversation started on that server.
This includes public IRC channels and private conversations with other users.
These directories are subdirectories of a directory created for the IRC
server itself, the so called master channel.
The following files are created in each directory:
.Pp
.Bl -tag -width "-nosplitX" -offset indent -compact
.It Pa in
A FIFO which can be used to write messages to the IRC server.
If the messages is prefixed with a backslash it is transmitted as a raw
IRC message, otherwise a
.Em PRIVMSG
with the given text is created and send to the channel/user associated
with the current subdirectory.
This file is removed as soon as
.Nm
terminates.
.It Pa out
A regular file containing messages received from the IRC server in a
human readable format.
The file only contains IRC messages associated with the channel/user
represented by the subdirectory.
This file is not removed on program termination.
.It Pa id
A unique ID for identifying the conversation.
For public IRC channels this is the unsanitized channel, for private
conversation the unsanitized user name.
This file does not exist for the master channel and is not removed on
program termination.
.El
.Pp
The master channel directory also include a file named
.Pa log .
This file contains all received messages containing the user's name and
messages received through private conversations.
.Pp
Directories for public IRC channels also contain the following files:
.Pp
.Bl -tag -width "-nosplitX" -offset indent -compact
.It Pa usr
A UNIX domain socket which reports the nick names of all users currently
connected to the channel.
Nick names are separated by a newline and written in alphabetic order to
the socket.
The socket is closed by
.Nm
as soon as all nick names haven been written to it.
Additionally, it is removed entirely as soon as the program terminates.
.El
.Pp
On startup
.Nm
attempts to connect to the given
.Ar server .
If a connection was established successful it automatically joins the
given IRC
.Ar channels
(if any).
.Nm
makes no attempt to reestablish the connection, it simply terminates
when the connection to the IRC server is lost.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl k Pa key
Path to PEM encoded key used for client authorization using TLS, also
known as
.Em CertFP .
This requires
.Fl c
and
.Fl t
to be given as well.
.It Fl c Pa cert
Certificate
Path to PEM encoded certificate used for client authorization using TLS,
also known as
.Em CertFP .
This requires
.Fl k
and
.Fl t
to be given as well.
.It Fl r Pa certs
Path to file containing root certificates.
This requires
.Fl t
to be given as well.
Defaults to the host's root CA set.
.It Fl f Ar name
Real name associated with the user's nick.
Defaults to the user's login name.
.It Fl i Pa prefix
Path to the root directory used for creating channel and server
subdirectory.
Default to
.Pa ~/irc .
.It Fl n Ar nick
Nick name used on the IRC server.
Defaults to the user's login name.
.It Fl p Ar port
TCP port used to connect to the IRC server.
Defaults to 6667.
.It Fl t
Enables TLS, which is disabled by default.
.It Fl d
Write debug messages to standard output.
.El
.Sh EXAMPLES
Connect to hackint and join the
.Nm
irc channel:
.Pp
.Dl hii irc.hackint.eu '#hii'
.Pp
Connect to freenode and monitor all server messages:
.Bd -literal -offset indent
hii chat.freenode.net &
tail -f ~/irc/chat.freenode.net/out
.Ed
.Sh SEE ALSO
.Xr ii 1 ,
.Xr tail 1
.Sh AUTHORS
.An SÃ¶ren Tempel Aq Mt soeren@soeren-tempel.net
.Sh BUGS
.Nm
has tight restrictions regarding directory names for both security and
compatibility reasons.
The problem with this being that directory names are not unique.
For instance, joining a channel named
.Em #foo|bar
and a channel named
.Em #foo/bar
is not possible since they are assigned the same directory name.
